{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authenticate.service.ts","webpack:///./src/app/customer-item/customer-item.component.css","webpack:///./src/app/customer-item/customer-item.component.html","webpack:///./src/app/customer-item/customer-item.component.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/join-member-form/join-member-form.component.css","webpack:///./src/app/join-member-form/join-member-form.component.html","webpack:///./src/app/join-member-form/join-member-form.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu-bar/menu-bar.component.css","webpack:///./src/app/menu-bar/menu-bar.component.html","webpack:///./src/app/menu-bar/menu-bar.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { JoinMemberFormComponent } from './join-member-form/join-member-form.component';\nimport { CustomerItemComponent } from './customer-item/customer-item.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'register', pathMatch: 'full' },\n\n  {path: 'register', component: RegisterComponent},\n\n  {path: 'login', component: LoginComponent },\n\n  {path: 'customers', component: CustomerListComponent }\n\n// {path: 'member-form', component: JoinMemberFormComponent}\n\n // {path: 'customer-item', component: CustomerItemComponent}\n\n  // {path: 'customers', component: CustomerListComponent},\n\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- <div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <nav>\\n    <a routerLink=\\\"register\\\">Register your first account</a>\\n    <a routerLink=\\\"login\\\">  Sign in</a>\\n  </nav> -->\\n<app-menu-bar></app-menu-bar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gym';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { JoinMemberFormComponent } from './join-member-form/join-member-form.component';\nimport { CustomerItemComponent } from './customer-item/customer-item.component';\nimport { SuiModule } from 'ng2-semantic-ui';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport { CustomerService } from './customer.service';\nimport { AuthenticateService } from './authenticate.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    CustomerListComponent,\n    JoinMemberFormComponent,\n    CustomerItemComponent,\n    MenuBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SuiModule,\n    FormsModule\n  ],\n  providers: [CustomerService, AuthenticateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { User } from './user';\nimport { Token } from './token';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n   storageKey = 'authenticate-jwt';\n   loginUrl = '/login';\n   users: User[];\n\n  constructor(private router: Router,\n              private http: HttpClient) { }\n\n  getAuthorizationOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'Bearer ' + this.getToken()\n      })\n    };\n  }\n\n  post(user: User): Observable<Token> {\n    console.log('posting');\n    console.log(user);\n    return this.http.post<Token>(this.loginUrl, user);\n  }\n\n  setToken(token: string) {\n    localStorage.setItem(this.storageKey, token);\n  }\n\n  getToken() {\n    //console.log('getting token');\n    return localStorage.getItem(this.storageKey);\n  }\n\n  isLoggedIn() {\n    return this.getToken() != null;\n  }\n\n  isLoggedOut() {\n    return this.getToken() == null;\n  }\n\n  logOut() {\n    localStorage.removeItem(this.storageKey);\n    console.log(this.storageKey);\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"ui cards\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"content\\\">\\n     \\n      <div class=\\\"header\\\">\\n        {{customer.firstName}} {{customer.lastName}}\\n      </div>\\n      <div class=\\\"meta\\\">\\n        {{customer.phone}}\\n      </div>\\n      <div class=\\\"description\\\">\\n        {{customer.email}}\\n      </div>\\n    </div>\\n    <ng-content select=\\\"[buttons]\\\"></ng-content>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, HostBinding, EventEmitter, Output } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'app-customer-item',\n  templateUrl: './customer-item.component.html',\n  styleUrls: ['./customer-item.component.css']\n})\nexport class CustomerItemComponent implements OnInit {\n\n  @Input() customer: Customer;\n// @Output() deleted = new EventEmitter();\n  @HostBinding('class') columnClass = 'four wide column';\n  constructor(private customers: CustomerService) { }\n\n  ngOnInit() {\n  }\n\n  // this.customerService.deleteCustomer(customer.id).subscribe();\n\n}\n","module.exports = \".container {\\n  margin-top: 50px;\\n}\\n/* .selected {\\n    background-color: #CFD8DC !important;\\n    color: white;\\n  }\\n  .customers {\\n    margin: 0 0 2em 0;\\n    list-style-type: none;\\n    padding: 0;\\n    width: 15em;\\n  }\\n  .customers li {\\n    cursor: pointer;\\n    position: relative;\\n    left: 0;\\n    background-color: #EEE;\\n    margin: .5em;\\n    padding: .3em 0;\\n    height: 1.6em;\\n    border-radius: 4px;\\n  }\\n  .customers li.selected:hover {\\n    background-color: #BBD8DC !important;\\n    color: white;\\n  }\\n  .customers li:hover {\\n    color: #607D8B;\\n    background-color: #DDD;\\n    left: .1em;\\n  }\\n  .customers .text {\\n    position: relative;\\n    top: -3px;\\n  }\\n  .customers .badge {\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    padding: 0.8em 0.7em 0 0.7em;\\n    background-color: #607D8B;\\n    line-height: 1em;\\n    position: relative;\\n    left: -1px;\\n    top: -4px;\\n    height: 1.8em;\\n    margin-right: .8em;\\n    border-radius: 4px 0 0 4px;\\n  } */\\n \\n  \"","module.exports = \"<div class=\\\"ui container\\\">\\n    <div class=\\\"ui grid\\\">\\n          <app-customer-item *ngFor=\\\"let customer of customers\\\" [customer]=\\\"customer\\\">\\n            <div class=\\\"extra content\\\" buttons>\\n              <div class=\\\"ui three buttons\\\">\\n              <button class=\\\"ui basic green button\\\">Approve</button>\\n              <a routerLink=\\\"/login\\\"><button class=\\\"ui basic blue button\\\">Modify</button></a>\\n              <button class=\\\"ui basic red button\\\" (click)=\\\"deleteCustomer(customer._id)\\\">Delete</button>\\n              </div>\\n           </div>\\n          </app-customer-item>\\n          <p>test out</p>\\n      </div>\\n  <!-- <div class=\\\"ui grid\\\">\\n    <app-customer-item *ngFor=\\\"let customer of customers | async\\\" [customer]=\\\"customer\\\">\\n      <p>test</p>\\n      <div class=\\\"extra content\\\">\\n         <div class=\\\"ui three buttons\\\">\\n         <button class=\\\"ui basic green button\\\">Approve</button>\\n         <a routerLink=\\\"/login\\\"><button class=\\\"ui basic blue button\\\">Modify</button></a>\\n         <button class=\\\"ui basic red button\\\" (click)=\\\"deleteCustomer(customer._id)\\\">Decline</button>\\n         </div>\\n      </div>\\n    </app-customer-item>\\n  </div> -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\n\nimport { CustomerService } from '../customer.service';\nimport { Observable } from 'rxjs';\nimport { getRandomString } from 'selenium-webdriver/safari';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  customers: Customer[];\n\n  selectedCustomer: Customer;\n\n  constructor(private customerService: CustomerService) { }\n\n  getCustomers(): void {\n    console.log(\"getting customers!\");\n    this.customerService.getCustomers().subscribe(\n      customers => this.customers = customers\n    );\n  \n  }\n\n  ngOnInit() {\n    this.getCustomers();\n  }\n  \n  deleteCustomer(id: string) {\n    console.log(\"customer id: \" + id);\n   // this.customerService.deleteCustomer(id).subscribe();\n    this.customerService.deleteCustomer(id).subscribe(data=>{\n      console.log(\"esdf\");\n      this.getCustomers();\n    });\n\n    console.log(\"blabla\");\n  }\n//   regetCustomers(): void{\n//  //   console.log(\"emit triggered!\");\n//     this.getCustomers();\n//   }\n  // onSelect(customer: Customer): void {\n  //   this.selectedCustomer = customer;\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Customer } from './customer';\n\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { AuthenticateService } from './authenticate.service';\nimport { map, catchError } from 'rxjs/operators';\n// import 'rxjs/add/operator/map';\n// import { Http, Response } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  uri = 'http://localhost:5500/customers';\n  registerUrl = '/register';\n\n    customers: Customer[];\n\n    httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n  constructor(private http: HttpClient, private authenticate: AuthenticateService) { }\n\n\n\n  getCustomers(): Observable<Customer[]> {\n    return this.http.get<Customer[]>(this.uri, this.authenticate.getAuthorizationOptions());\n  }\n\n  postCustomers(customer: Customer): Observable<Customer> {\n    return this.http.post<Customer>(this.registerUrl, customer, this.httpOptions);\n  }\n\n  deleteCustomer (id: string): Observable<{}> {\n    const url = `${this.uri}/${id}`; // DELETE api/heroes/42\n    console.log(url);\n    return this.http.delete(url, this.httpOptions);\n    \n      // .pipe(\n      //   catchError(this.handleError('deleteHero'))\n      // );\n  }\n\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"join-container\\\">\\n  <Form>\\n    <div class=\\\"field\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Phone</label>\\n      <input type=\\\"text\\\" name=\\\"Phone\\\" placeholder=\\\"Phone\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Date of Birth</label>\\n      <input type=\\\"text\\\" name=\\\"dob\\\" placeholder=\\\"DOB\\\" ngModel>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn-success\\\">Regster</button>\\n    \\n  </Form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-join-member-form',\n  templateUrl: './join-member-form.component.html',\n  styleUrls: ['./join-member-form.component.css']\n})\nexport class JoinMemberFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login-container {\\n    max-width: 500px;\\n    margin: 50px auto;\\n  }\"","module.exports = \"<div class=\\\"login-container\\\">\\n  <form class=\\\"ui big form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm)\\\">\\n    <div class=\\\"field\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Enter your username\\\" ngModel>\\n  </div>\\n  <div class=\\\"field\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter your password\\\" ngModel>\\n  </div>\\n  \\n  <button type=\\\"submit\\\" class=\\\"ui primary button float right floated\\\">Login</button>\\n  </form>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authenticate: AuthenticateService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    const input = form.value;\n\n      console.log(input);\n    const payload = {\n      username: input.username,\n      password: input.password\n    };\n\n    console.log('onSubmit');\n\n    this.authenticate.post(payload)\n    .subscribe(data => {\n      console.log('subscribing');\n      console.log(data);\n      this.authenticate.setToken(data.token);\n      console.log(data.token);\n\n      this.router.navigate(['/customers']);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui menu header\\\">\\n  <div class=\\\"ui container\\\">\\n    <div class=\\\"item\\\">\\n      <a routerLink=\\\"../customers\\\" aria-label=\\\"Customer Dashboard\\\">\\n        <i class=\\\"icon users large blue\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n    </div>\\n      <div class=\\\"header item\\\">\\n        <h1>Customer Dashboard</h1>\\n      </div>\\n      <div class=\\\"item\\\" *ngIf=\\\"authenticate.isLoggedOut()\\\">\\n        <a routerLink=\\\"../register\\\">\\n        <button class=\\\"ui basic button\\\">\\n          <i class=\\\"add user icon\\\" aria-hideen=\\\"true\\\">\\n            Sign Up\\n          </i>\\n        </button>\\n        </a>\\n        <!-- <div class=\\\"item\\\"> -->\\n          <a routerLink=\\\"../login\\\">\\n          <button class=\\\"ui basic button\\\">\\n            <i class=\\\"add user icon\\\" aria-hideen=\\\"true\\\">\\n              Sign In\\n            </i>\\n          </button>\\n          </a>\\n      <!-- </div> -->\\n    </div>\\n    <div class=\\\"right menu\\\" *ngIf=\\\"authenticate.isLoggedIn()\\\">\\n      <button class=\\\"ui primary button logout\\\" (click)=\\\"logout()\\\">logout</button>\\n    </div>\\n  </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate.service';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: ['./menu-bar.component.css']\n})\nexport class MenuBarComponent implements OnInit {\n\n  constructor(private authenticate: AuthenticateService) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authenticate.logOut();\n  }\n\n\n}\n","module.exports = \".register-container {\\n    max-width: 500px;\\n    margin: 50px auto;\\n  }\"","module.exports = \"<div class=\\\"register-container\\\">\\n  <form name=\\\"registerForm\\\" class=\\\"ui big form\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(registerForm)\\\">\\n    <div class=\\\"field\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Phone</label>\\n      <input type=\\\"text\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" ngModel>\\n    </div>\\n    <div class=\\\"field\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" ngModel email>\\n      \\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"ui primary button float right floated\\\">Register</button>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { NgForm } from '@angular/forms';\nimport { Customer } from '../customer';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loading = false;\n  newCustomer: Customer;\n // customers: Customer[];\n\n  constructor(private customerService: CustomerService) { }\n\n  ngOnInit() {\n  }\n\n\n  onSubmit(form: NgForm) {\n\n    this.loading = true;\n\n    const formInput = Object.assign({}, form.value);\n\n    const customer: Customer = {\n      firstName: formInput.firstName,\n      lastName: formInput.lastName,\n      phone: formInput.phone,\n      email: formInput.email\n    };\n\n    this.customerService.postCustomers(customer)\n    .subscribe(data => {\n      console.log('posting new data');\n      form.reset();\n      this.newCustomer = data;\n      console.log('new data posted');\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: '/gym'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}